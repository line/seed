{
glyphname = uni5631;
layers = (
{
hints = (
{
horizontal = 1;
place = (-77, 27);
place = (-77, 27);
type = Stem;
},
{
horizontal = 1;
place = (11, 28);
place = (11, 28);
type = Stem;
},
{
horizontal = 1;
place = (110, 31);
place = (110, 31);
type = Stem;
},
{
horizontal = 1;
place = (180, 26);
place = (180, 26);
type = Stem;
},
{
horizontal = 1;
place = (283, 26);
place = (283, 26);
type = Stem;
},
{
horizontal = 1;
place = (422, 26);
place = (422, 26);
type = Stem;
},
{
horizontal = 1;
place = (521, 29);
place = (521, 29);
type = Stem;
},
{
horizontal = 1;
place = (631, 29);
place = (631, 29);
type = Stem;
},
{
horizontal = 1;
place = (750, 31);
place = (750, 31);
type = Stem;
},
{
place = (80, 31);
place = (80, 31);
type = Stem;
},
{
place = (242, 31);
place = (242, 31);
type = Stem;
},
{
place = (372, 31);
place = (372, 31);
type = Stem;
},
{
place = (450, 30);
place = (450, 30);
type = Stem;
},
{
place = (665, 29);
place = (665, 29);
type = Stem;
},
{
place = (893, 30);
place = (893, 30);
type = Stem;
},
{
horizontal = 1;
place = (769, 29);
place = (769, 29);
type = Stem;
},
{
place = (880, 30);
place = (880, 30);
type = Stem;
},
{
horizontal = 1;
place = (556, 25);
place = (556, 25);
type = Stem;
},
{
place = (858, 30);
place = (858, 30);
type = Stem;
},
{
horizontal = 1;
place = (521, 139);
place = (521, 139);
type = Stem;
},
{
place = (476, 30);
place = (476, 30);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(80,119,ls),
(80,113,o),
(83,110,o),
(89,110,cs),
(264,110,ls),
(270,110,o),
(273,113,o),
(273,119,cs),
(273,772,ls),
(273,778,o),
(270,781,o),
(264,781,cs),
(89,781,ls),
(83,781,o),
(80,778,o),
(80,772,cs)
);
},
{
closed = 1;
nodes = (
(403,631,l),
(901,631,ls),
(907,631,o),
(910,634,o),
(910,640,cs),
(910,789,ls),
(910,795,o),
(907,798,o),
(901,798,cs),
(381,798,ls),
(375,798,o),
(372,795,o),
(372,789,cs),
(372,518,ls),
(372,266,o),
(357,78,o),
(274,-54,cs),
(271,-59,o),
(272,-64,o),
(278,-66,cs),
(293,-73,ls),
(298,-76,o),
(302,-75,o),
(305,-70,cs),
(385,70,o),
(403,258,o),
(403,516,cs)
);
},
{
closed = 1;
nodes = (
(480,180,l),
(665,180,l),
(665,52,l),
(626,46,o),
(583,42,o),
(539,39,cs),
(532,39,o),
(530,35,o),
(532,29,cs),
(536,17,ls),
(538,12,o),
(542,10,o),
(547,11,c),
(641,18,o),
(731,34,o),
(801,55,c),
(809,40,o),
(815,24,o),
(820,10,cs),
(822,4,o),
(826,2,o),
(832,4,cs),
(841,8,ls),
(846,10,o),
(848,14,o),
(846,19,cs),
(830,61,o),
(804,108,o),
(775,148,cs),
(772,153,o),
(768,154,o),
(763,151,cs),
(755,147,ls),
(749,145,o),
(748,140,o),
(752,135,cs),
(765,118,o),
(777,99,o),
(788,81,c),
(760,72,o),
(728,64,o),
(694,57,c),
(694,180,l),
(893,180,l),
(893,28,ls),
(893,-24,o),
(880,-48,o),
(766,-50,cs),
(759,-50,o),
(756,-54,o),
(759,-61,cs),
(764,-70,ls),
(766,-75,o),
(769,-77,o),
(775,-77,cs),
(898,-73,o),
(923,-43,o),
(923,29,cs),
(923,197,ls),
(923,203,o),
(920,206,o),
(914,206,cs),
(694,206,l),
(694,283,l),
(879,283,ls),
(885,283,o),
(888,286,o),
(888,292,cs),
(888,439,ls),
(888,445,o),
(885,448,o),
(879,448,cs),
(694,448,l),
(694,526,l),
(767,533,o),
(837,543,o),
(895,556,cs),
(901,557,o),
(902,562,o),
(898,567,c),
(893,576,ls),
(890,581,o),
(887,582,o),
(881,581,cs),
(767,555,o),
(607,545,o),
(456,550,cs),
(451,550,o),
(448,547,o),
(448,543,cs),
(448,542,o),
(448,541,o),
(449,539,cs),
(452,528,ls),
(454,523,o),
(457,521,o),
(463,521,cs),
(528,519,o),
(598,521,o),
(665,525,c),
(665,448,l),
(485,448,ls),
(479,448,o),
(476,445,o),
(476,439,cs),
(476,292,ls),
(476,286,o),
(479,283,o),
(485,283,cs),
(665,283,l),
(665,206,l),
(459,206,ls),
(453,206,o),
(450,203,o),
(450,197,cs),
(450,-68,ls),
(450,-74,o),
(453,-77,o),
(459,-77,cs),
(471,-77,ls),
(477,-77,o),
(480,-74,o),
(480,-68,cs)
);
},
{
closed = 1;
nodes = (
(242,750,l),
(242,141,l),
(111,141,l),
(111,750,l)
);
},
{
closed = 1;
nodes = (
(665,422,l),
(665,309,l),
(506,309,l),
(506,422,l)
);
},
{
closed = 1;
nodes = (
(858,422,l),
(858,309,l),
(694,309,l),
(694,422,l)
);
},
{
closed = 1;
nodes = (
(880,769,l),
(880,660,l),
(403,660,l),
(403,769,l)
);
}
);
vertWidth = 1000;
width = 1000;
}
);
note = cid02532;
unicode = 22065;
}
